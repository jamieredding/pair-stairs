/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as StreamsRouteImport } from './routes/streams'
import { Route as DevelopersRouteImport } from './routes/developers'
import { Route as IndexRouteImport } from './routes/index'
import { Route as TeamTeamNameRouteImport } from './routes/team.$teamName'
import { Route as NewTeamRouteImport } from './routes/new.team'

const StreamsRoute = StreamsRouteImport.update({
  id: '/streams',
  path: '/streams',
  getParentRoute: () => rootRouteImport,
} as any)
const DevelopersRoute = DevelopersRouteImport.update({
  id: '/developers',
  path: '/developers',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const TeamTeamNameRoute = TeamTeamNameRouteImport.update({
  id: '/team/$teamName',
  path: '/team/$teamName',
  getParentRoute: () => rootRouteImport,
} as any)
const NewTeamRoute = NewTeamRouteImport.update({
  id: '/new/team',
  path: '/new/team',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/developers': typeof DevelopersRoute
  '/streams': typeof StreamsRoute
  '/new/team': typeof NewTeamRoute
  '/team/$teamName': typeof TeamTeamNameRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/developers': typeof DevelopersRoute
  '/streams': typeof StreamsRoute
  '/new/team': typeof NewTeamRoute
  '/team/$teamName': typeof TeamTeamNameRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/developers': typeof DevelopersRoute
  '/streams': typeof StreamsRoute
  '/new/team': typeof NewTeamRoute
  '/team/$teamName': typeof TeamTeamNameRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/developers' | '/streams' | '/new/team' | '/team/$teamName'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/developers' | '/streams' | '/new/team' | '/team/$teamName'
  id:
    | '__root__'
    | '/'
    | '/developers'
    | '/streams'
    | '/new/team'
    | '/team/$teamName'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DevelopersRoute: typeof DevelopersRoute
  StreamsRoute: typeof StreamsRoute
  NewTeamRoute: typeof NewTeamRoute
  TeamTeamNameRoute: typeof TeamTeamNameRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/streams': {
      id: '/streams'
      path: '/streams'
      fullPath: '/streams'
      preLoaderRoute: typeof StreamsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/developers': {
      id: '/developers'
      path: '/developers'
      fullPath: '/developers'
      preLoaderRoute: typeof DevelopersRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/team/$teamName': {
      id: '/team/$teamName'
      path: '/team/$teamName'
      fullPath: '/team/$teamName'
      preLoaderRoute: typeof TeamTeamNameRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/new/team': {
      id: '/new/team'
      path: '/new/team'
      fullPath: '/new/team'
      preLoaderRoute: typeof NewTeamRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DevelopersRoute: DevelopersRoute,
  StreamsRoute: StreamsRoute,
  NewTeamRoute: NewTeamRoute,
  TeamTeamNameRoute: TeamTeamNameRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
